resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: source-code
  type: git
  source:
    uri: https://github.com/JassoftLtd/DashVid.io.git
    branch: master

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack_webhook_url}}

- name: pull-request
  type: pull-request
  source:
    access_token: {{github-access-token}}
    repo: JassoftLtd/DashVid.io
    base: master

groups:
- name: Deployment
  jobs:
  - test-lambdas
  - test-deploy
  - api-tests
  - ui-tests
  - production-deploy
- name: Pull Requests
  jobs:
  - test-pull-request

jobs:
- name: test-lambdas
  plan:
  - get: source-code
    trigger: true
  - task: Test
    file: source-code/concourse/test-code.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#build-notifications'
        text: |
          Test Lambda Failed. Check it out at:
          http://concourse.jassoft.co.uk:8080/builds/$BUILD_ID

- name: test-deploy
  serial_groups: [DashVidTestDeploy, DashVidAPITest, DashVidUITest]
  plan:
  - aggregate:
    - get: source-code
      passed: [test-lambdas]
      trigger: true
  - task: Deploy
    file: source-code/concourse/build-api.yml
    params:
      TF_VAR_aws_terraform_state_bucket: dashvid-terraform-state-tests
      TF_VAR_aws_region: us-east-1
      TF_VAR_environment_name: test-
      TF_VAR_environment_subdomain: test.
      TF_VAR_auth_email_from_address: no-reply@test.dashvid.io
      TF_VAR_bucket_force_destroy: true
      TF_VAR_aws_access_key: {{aws_access_key}}
      TF_VAR_aws_secret_key: {{aws_secret_key}}
      TF_VAR_stripe_api_key: {{stripe_api_key_test}}
      TF_VAR_aws_identity_pool: {{aws_identity_pool_test}}
      TF_VAR_dns_zone_id: {{dns_zone_id}}
      TF_VAR_dns_zone_name: {{dns_zone_name}}
      TF_VAR_acm_certificate_arn: {{acm_certificate_arn_test}}
      TF_VAR_api_certificate_arn: {{api_certificate_arn_test}}
      TF_VAR_slack_webhook_url: {{slack_webhook_url}}
      REACT_APP_STRIPE_PUBLISHABLE_KEY: pk_test_ebVZiJokoWIbXD1TNNZ8lj2A
      REACT_APP_GA_TRACKING_CODE: {{ga_tracking_code_test}}
      REACT_APP_API_ADRESS: https://test-api.dashvid.io
      REACT_APP_AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: {{aws_access_key}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_key}}
    on_failure:
      put: slack-alert
      params:
        channel: '#build-notifications'
        text: |
          Test Deploy Failed. Check it out at:
          http://concourse.jassoft.co.uk:8080/builds/$BUILD_ID

- name: api-tests
  serial_groups: [DashVidAPITest]
  plan:
  - aggregate:
    - get: source-code
      passed: [test-deploy]
      trigger: true
  - task: API Tests
    file: source-code/concourse/test/api-tests.yml
    params:
      aws_region: us-east-1
      DASHVID_API_ADDRESS: https://test-api.dashvid.io
    on_failure:
      put: slack-alert
      params:
        channel: '#build-notifications'
        text: |
          API Tests Failed. Check it out at:
          http://concourse.jassoft.co.uk:8080/builds/$BUILD_ID

- name: ui-tests
  serial_groups: [DashVidUITest]
  plan:
  - aggregate:
    - get: source-code
      passed: [test-deploy]
      trigger: true
  - task: UI Tests
    file: source-code/concourse/test/ui-tests.yml
    params:
      DASHVID_UI_ADDRESS: https://test.dashvid.io
      SAUCE_USER: {{sauce_user}}
      SAUCE_KEY: {{sauce_key}}
    on_failure:
      put: slack-alert
      params:
        channel: '#build-notifications'
        text: |
          UI Tests Failed. Check it out at:
          http://concourse.jassoft.co.uk:8080/builds/$BUILD_ID

- name: production-deploy
  serial_groups: [DashVidProdDeploy]
  plan:
  - get: source-code
    passed: [api-tests, ui-tests]
  - task: Production Deploy
    file: source-code/concourse/build-api.yml
    params:
      TF_VAR_aws_terraform_state_bucket: dashvid-terraform-state
      TF_VAR_aws_region: eu-west-1
      TF_VAR_aws_access_key: {{aws_access_key}}
      TF_VAR_aws_secret_key: {{aws_secret_key}}
      TF_VAR_stripe_api_key: {{stripe_api_key}}
      TF_VAR_aws_identity_pool: {{aws_identity_pool}}
      TF_VAR_dns_zone_id: {{dns_zone_id}}
      TF_VAR_dns_zone_name: {{dns_zone_name}}
      TF_VAR_acm_certificate_arn: {{acm_certificate_arn}}
      TF_VAR_api_certificate_arn: {{api_certificate_arn}}
      TF_VAR_slack_webhook_url: {{slack_webhook_url}}
      TF_VAR_videos_table_read_capacity: 2
      REACT_APP_STRIPE_PUBLISHABLE_KEY: pk_live_IYFID6k8KNK8uTVSeKQ6Ync5
      REACT_APP_GA_TRACKING_CODE: {{ga_tracking_code}}
      REACT_APP_API_ADRESS: https://api.dashvid.io
      REACT_APP_AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: {{aws_access_key}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_key}}
    on_failure:
      put: slack-alert
      params:
        channel: '#build-notifications'
        text: |
          Production Deploy Failed. Check it out at:
          http://concourse.jassoft.co.uk:8080/builds/$BUILD_ID

  - put: slack-alert
    params:
      channel: '#build-notifications'
      text: |
        Production Deployment Successful. Check it out at:
        http://concourse.jassoft.co.uk:8080/builds/$BUILD_ID

# test a pull request
- name: test-pull-request
  plan:
  - get: pull-request
    trigger: true
    version: every
  - put: pull-request
    params:
      path: pull-request
      status: pending
#  Test Lambda funcitons
  - task: Test
    file: pull-request/concourse/test-code.yml
    input_mapping: {source-code: pull-request}
    on_success:
      put: pull-request
      params:
        path: pull-request
        status: success
    on_failure:
      put: pull-request
      params:
        path: pull-request
        status: failure